/*Backend e FrontEnd - Semana Omnistack11*/

Ambiente de Configuração:

- npm install express;
- npx create-react-app frontend
- dentro da pasta frontend (criada acima), executar npm start

/*BAckEnd (Segundo dia)*/

- Node.js e Express
  - Rotas e recursos;
  - Métodos HTTP;
  - Tipos de parâmetros.

- Configurando o Nodemon;
- Configurando o Insomnia;
- Diferenças entre Banco de Dados;
- Configurando Banco de dados;
- Pensando nas entidades e funcionalidades;
- Construção do Back-end;
- Adicionando módulo CORS;
- Enviando Back-end ao Github.

/* Final da emenda Backend*/

- Instalar Nodemon: npm install nodemon -D
- Query builder: KnexJS (knexjs.org)
  - Para instalar: npm install knex
  - npm install sqlite3 (instalar a versão do BD que vamos usar)
  - npx knex init


/*ENTIDADES*/
ENTIDADEs QUE SERÃO ARMAZENADAS NO NOSSO BANCO DE DADOS (PENSAR QUAIS)
  1 -  ONG;
  2 -  CASOS (incident).


/*FUNCIONALIDADES*/
AGORA PENSAR NAS FUNCIONALIDADES QUE CADA ENTIDADE (ONG, CASOS) VÃO
PODER FAZER, SOFRER E ETC... NA NOSSA APLICAÇÃO
  1 - LOGIN (Precisamos que a ONG faça login em nossa aplicação);
  2 - LOGOUT DA ONG (NÃO VAI TER TANTA INFLUENCIA NO BACK-END);
  3 - CADASTRO DE ONG; 
  4 - CADASTRAR NOVOS CASOS;

Criar as tabelas - Usando Migrations - QUe está do lado esquerdo
no site: knexjs.org (lá tem o passo a passo), inclusive esse 
codigo abaixo:
  - npx knex migrate:make create_ongs (essa migration vai criar a tabela ongs)

  5 - DELETAR CASOS;
  6 - LISTAR CASOS ESPECIFICOS DE UMA ONG;
  7 - LISTAR TODOS OS CASOS;
  8 - ENTRAR EM CONTATO COM A ONG (POR WHATS OU MAIL).
 

